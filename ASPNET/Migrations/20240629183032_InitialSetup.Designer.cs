// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPNET.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240629183032_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ASPNET_EF.Models.Dictionaries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DictionaryLevel")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("DictionaryName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IsDefaultDictionary")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Dictionaries");
                });

            modelBuilder.Entity("ASPNET_EF.Models.SessionStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllAnswers")
                        .HasColumnType("int");

                    b.Property<int>("DictionaryId")
                        .HasColumnType("int");

                    b.Property<int>("GoodAnswers")
                        .HasColumnType("int");

                    b.Property<string>("Percentage")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("SessionDate")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.HasIndex("UserId");

                    b.ToTable("SessionStatistics");
                });

            modelBuilder.Entity("ASPNET_EF.Models.SubscribedDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DictionaryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.HasIndex("UserId");

                    b.ToTable("SubscribedDictionary");
                });

            modelBuilder.Entity("ASPNET_EF.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IsActive")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ASPNET_EF.Models.Words", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DictionaryId")
                        .HasColumnType("int");

                    b.Property<string>("WordPolish")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WordTranslated")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("DictionaryId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("ASPNET_EF.Models.Dictionaries", b =>
                {
                    b.HasOne("ASPNET_EF.Models.User", "User")
                        .WithMany("Dictionaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPNET_EF.Models.SessionStatistics", b =>
                {
                    b.HasOne("ASPNET_EF.Models.Dictionaries", "Dictionary")
                        .WithMany("SessionStatistics")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNET_EF.Models.User", "User")
                        .WithMany("SessionStatistics")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dictionary");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPNET_EF.Models.SubscribedDictionary", b =>
                {
                    b.HasOne("ASPNET_EF.Models.Dictionaries", "Dictionary")
                        .WithMany("SubscribedDictionaries")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNET_EF.Models.User", "User")
                        .WithMany("SubscribedDictionaries")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Dictionary");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ASPNET_EF.Models.Words", b =>
                {
                    b.HasOne("ASPNET_EF.Models.Dictionaries", "Dictionary")
                        .WithMany("Words")
                        .HasForeignKey("DictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dictionary");
                });

            modelBuilder.Entity("ASPNET_EF.Models.Dictionaries", b =>
                {
                    b.Navigation("SessionStatistics");

                    b.Navigation("SubscribedDictionaries");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("ASPNET_EF.Models.User", b =>
                {
                    b.Navigation("Dictionaries");

                    b.Navigation("SessionStatistics");

                    b.Navigation("SubscribedDictionaries");
                });
#pragma warning restore 612, 618
        }
    }
}
